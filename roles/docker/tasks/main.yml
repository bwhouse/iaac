- name: Create docker group
  group:
    name: "{{ docker_user.name }}"
    state: present
    gid: "{{ docker_user.id }}"
  become: true

- name: Create docker user
  user:
    name: "{{ docker_user.name }}"
    uid: "{{ docker_user.id }}"
    group: "{{ docker_user.name }}"
    create_home: false
  become: true

- name: Add user to docker user group
  user:
    name: "{{ user }}"
    groups: "{{ docker_user.name }}"
    append: true
  become: true

- name: Add user to docker group
  user:
    name: "{{ user }}"
    groups: docker
    append: true
  become: true
  register: add_group

- name: reset ssh connection to allow user changes to affect 'current login user'
  meta: reset_connection
  when: add_group|changed

- name: Clean up docker containers
  cron:
    name: clean up docker containers
    hour: 12
    minute: 0
    weekday: 3
    job: docker system prune -af --volumes

- name: Create docker compose directory
  file:
    path: "{{ docker_appdata_dir }}"
    state: directory
    owner: "{{ docker_user.name }}"
    group: "{{ docker_user.name }}"
    mode: "{{ docker_compose_directory_mask }}"
  become: true

## UFW Docker management from https://p1ngouin.com/posts/how-to-manage-iptables-rules-with-ufw-and-docker
# You should install Docker before this rule.
- name: configure ufw before.init to remove existing rules
  blockinfile:
    path: /etc/ufw/before.init
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: stop\)
    block: |
      iptables -F DOCKER-USER || true
      iptables -A DOCKER-USER -j RETURN || true
      iptables -X ufw-user-input || true
  become: true

- name: chmod /etc/ufw/before.init
  file:
    path: /etc/ufw/before.init
    state: touch
    mode: "a+x"
  become: true

- name: configure ufw to work with DOCKER-USER chain name
  blockinfile:
    path: /etc/ufw/after.rules
    marker: "# {mark} ANSIBLE MANAGED BLOCK (docker-user)"
    block: |
      *filter
      :DOCKER-USER - [0:0]
      :ufw-user-input - [0:0]
      :ufw-after-logging-forward - [0:0]

      -A DOCKER-USER -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      -A DOCKER-USER -m conntrack --ctstate INVALID -j DROP
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-user-input
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-after-logging-forward
      -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j DROP

      COMMIT
  become: true